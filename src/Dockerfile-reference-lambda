# Inspired from: https://github.com/aws/aws-sam-build-images/blob/develop/build-image-src/Dockerfile-dotnet7
# Inspired from: https://github.com/aws/aws-lambda-dotnet/blob/master/LambdaRuntimeDockerfiles/Images/net8/amd64/Dockerfile
# .NET installation instructions: https://learn.microsoft.com/en-us/dotnet/core/install/linux-scripted-manual#scripted-install

#FROM public.ecr.aws/lambda/provided:al2023-x86_64
#FROM public.ecr.aws/lambda/provided:al2023-arm64

FROM public.ecr.aws/sam/build-provided.al2023:latest-x86_64

#RUN dnf install -y \
#    tar \
#    gzip \
#    unzip \
#    python3 \
#    jq \
#    grep \
#    make \
#    rsync \
#    binutils \
#    gcc-c++ \
#    procps \
#    libxslt-devel \
#    libmpc-devel \
#    python3-devel \
#    && dnf clean all

#ENV LANG=en_US.UTF-8

ENV DOTNET_ROOT=/var/lang/bin \
    DOTNET_CLI_TELEMETRY_OPTOUT=1 \
    DOTNET_NOLOGO=1
    
ENV DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=1

RUN curl -L https://dot.net/v1/dotnet-install.sh -o dotnet-install.sh && \
    chmod +x ./dotnet-install.sh && \
    ./dotnet-install.sh -c 8.0 -i "${DOTNET_ROOT}"

#RUN dnf install -y dotnet-sdk-8.0

# Install tar and gzip for unarchiving downloaded tar.gz
#RUN dnf install -y findutils clang libstdc++

# RUN dnf install -y findutils gcc zlib
# RUN dnf install -y dotnet-sdk-8.0
# gcc zlib // clang libicu

# Set up .NET root

#    DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=1

#RUN curl -L https://dot.net/v1/dotnet-install.sh -o dotnet-install.sh && \
#    chmod +x ./dotnet-install.sh && \
#    ./dotnet-install.sh -c 8.0 -i "${DOTNET_ROOT}"

ENV PATH=~/.dotnet/tools:$PATH \
    DOTNET_CLI_HOME=/tmp/dotnet \
    XDG_DATA_HOME=/tmp/xdg

ENTRYPOINT []
CMD ["/bin/bash"]
